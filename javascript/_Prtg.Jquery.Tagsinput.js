(function($){$.Tagsinput=function(el,options){var base=this;base.$el=$(el);base.el=el;base.$el.data("Tagsinput",base);var tags=[],tagslist=$("<div />",{"class":"taglist"}),list=$("<ul />"),inputLi=$("<li />",{"class":"newtaginput"}),input=$("<input />",{"type":"text","disabled":base.$el.prop("disabled")}),editmode=false;base.init=function(){base.options=$.extend(true,{},$.Tagsinput.defaultOptions,options);if(base.$el.prop("id").indexOf("filter")<0){base.options.firstkeycode.push(43,45);base.options.firstregex=
/^(\+|\-)/}var loadedTags=base.$el.val().replace(/,/g,base.options.seperator);loadedTags=loadedTags.split(base.options.seperator);if(base.options.pastesplitregex!==null)base.options.pastesplitregex=new RegExp(base.options.pastesplitregex,"i");if(!base.options.readonly){inputLi.append(input);list.append(inputLi)}else tagslist.addClass("readonly");tagslist.append(list);base.$el.prop("type","hidden");base.$el.after(tagslist);for(var i=0;i<loadedTags.length;i++)base.addTag(loadedTags[i],true);if(!base.options.readonly)base.initEvents()};
base.initEvents=function(){input.on("keydown",function(event){if(event.which==8)if(this.value===""){$("li:last",list).prev().remove();tags=[];$("li",list).each(function(){tags.push($("span",this).text())});base.$el.val(tags.join(base.options.seperator))}});input.on("keypress",function(event){if(this.value===""&&$.inArray(event.which,base.options.firstkeycode)>-1){event.preventDefault();event.stopPropagation();return}if($.inArray(event.which,base.options.newtagkeycode)>-1){event.preventDefault();if(this.value!==
""){base.addTag(this.value);this.value="";if(base.options.autocomplete)input.autocomplete("close")}}});input.on("focus",function(event){if(base.options.autocomplete)$(this).autocomplete("search","")});input.on("focusout",function(event){if(input.val()!==""){base.addTag(input.val());input.val("")}});input.on("paste",function(e){setTimeout(function(){var seperatedTags;if(base.options.pastesplitregex===null)seperatedTags=[input.val()];else seperatedTags=input.val().split(base.options.pastesplitregex);
for(var i=0;i<seperatedTags.length;i++)base.addTag(seperatedTags[i]);input.val("")},100)});list.on("click",".closetag",function(){if(!input.prop("disabled")){$(this).parent().remove();base.updateTagsInput()}return false});list.on("click",".taglabel>span",function(){var $this=$(this);if(!base.$el.prop("disabled")&&$(".taglabeledit").length<1){var editput=$("<input />",{"class":"taglabeledit","value":$(this).text()});$this.html(editput);$this.parent(".taglabel").find(".closetag").hide();editmode=true;
if(base.options.autocomplete)$(".taglabeledit").autocomplete({minLength:0,search:function(){},focus:function(){editmode=false;return false},select:function(event,ui){$this.text(ui.item.value);base.updateTagsInput();$this.parents(".taglabel").find(".closetag").show();return false},create:function(){if(typeof base.options.tags==="function")base.options.tags($(this),function(tags){base.options.tags=tags});else $(this).autocomplete({source:base.options.tags})}});$(".taglabeledit").focus()}});list.on("keypress focusout",
".taglabeledit",function(event){var $this=$(this);if(!editmode)return;if($.inArray(event.which,base.options.newtagkeycode)>-1||event.type=="focusout"){event.preventDefault();event.stopPropagation();editmode=false;$this.parents(".taglabel").find(".closetag").show();if($this.val()!==""){var newTag=$this.val();$this.parent("span").text(newTag);base.updateTagsInput();$this.remove()}else{$this.closest("li").remove();$this.remove();base.updateTagsInput()}}});tagslist.on("click",function(){if($(".taglabeledit").length<
1)input.focus()});if(base.options.autocomplete)input.autocomplete({minLength:0,messages:{noResults:null,results:function(){}},search:function(){if(base.$el.prop("disabled"))return false},focus:function(){return false},select:function(event,ui){base.addTag(ui.item.value);input.val("");return false},create:function(){if(typeof base.options.tags==="function")base.options.tags($(this),function(tags){base.options.tags=tags});else $(this).autocomplete({source:base.options.tags,messages:{noResults:null,
results:function(){}}})}})};base.addTag=function(newTag,initTags){if(newTag!==""){var newTagLabel;if(base.options.firstregex)newTag=newTag.replace(base.options.firstregex,"");if(!base.options.readonly)newTagLabel=$("<li />",{"class":"taglabel","html":'<span></span> <i class="closetag icon-dark ui-icon ui-icon-close"></i>'});else newTagLabel=$("<li />",{"class":"taglabel","html":"<span></span>"});tags.push(newTag);newTagLabel.find("span").text(newTag);if(!base.options.readonly)inputLi.before(newTagLabel);
else list.append(newTagLabel);base.$el.val(tags.join(base.options.seperator));if(!initTags)base.$el.change()}};base.updateTagsInput=function(){tags=[];$("li.taglabel",list).each(function(elm,i){tags.push($("span",this).text())});base.$el.val(tags.join(base.options.seperator)).change()};base.init()};$.Tagsinput.defaultOptions={"tags":"[]","autocomplete":true,"seperator":" ","newtagkeycode":[44,13,32],"pastesplitregex":",| ","firstkeycode":[],"firstregex":null};$.fn.tagsinput=function(options){if(!$(this).is("input"))return;
return this.each(function(){if(!$(this).data("Tagsinput"))new $.Tagsinput(this,options)})}})(jQuery);
